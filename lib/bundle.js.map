{"version":3,"sources":["webpack:///webpack/bootstrap a103639f966dd28763ce","webpack:///./lib/slime.js","webpack:///./lib/moving_object.js","webpack:///./lib/game_view.js","webpack:///./lib/slime_air_hockey.js","webpack:///./lib/game.js","webpack:///./lib/util.js","webpack:///./lib/RAIslime.js","webpack:///./lib/MLslime.js","webpack:///./lib/trained_data.js","webpack:///./lib/AAIslime.js","webpack:///./lib/DAIslime.js","webpack:///./lib/BAIslime.js","webpack:///./lib/puck.js","webpack:///./lib/goals.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AC7DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,iCAAiC;AACtC;AACA,KAAK,iCAAiC;AACtC;AACA,KAAK,iCAAiC;AACtC;AACA,KAAK,iCAAiC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,iCAAiC;AACtC;AACA,KAAK,iCAAiC;AACtC;AACA,KAAK,iCAAiC;AACtC;AACA,KAAK,iCAAiC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;ACtKA;;;AAGA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA,gBAAgB;AAChB;;AAEA;;AAEA;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvQA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;ACZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,YAAY,uCAAuC;AACnD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2CAA2C;AACvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2CAA2C;AACvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2CAA2C;AACvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2CAA2C;AACvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2CAA2C;AACvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2CAA2C;AACvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AChcA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;;;;AC5EA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;;ACxGA;AACA;AACA;;;;;;;;;ACFA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AC5EA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;;;AAGA;;;;;;;;;ACpEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;;;ACzEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a103639f966dd28763ce","import MovingObject from './moving_object';\r\n\r\nclass Slime extends MovingObject {\r\n  constructor(options){\r\n    super(options);\r\n    this.puck = options.puck;\r\n    this.side = options.side;\r\n    this.points = 0;\r\n    this.startPos = options.startPos;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.moveTo(this.pos['x'], this.pos['y']);\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.pos['x'], this.pos['y'], this.radius, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = 'black';\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n    if (this.side === 1){\r\n      this.drawLeftEye(ctx, -1);\r\n      // this.drawLeftEye(ctx, 1);\r\n    } else if (this.side === 3) {\r\n      this.drawRightEye(ctx, -1);\r\n      // this.drawRightEye(ctx, 1);\r\n    }\r\n\r\n  }\r\n\r\n  drawLeftEye(ctx, s){\r\n    ctx.moveTo(this.pos['x'] + 2*this.radius/3, this.pos['y'] + s * this.radius/3);\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.pos['x'] + 2*this.radius/3, this.pos['y'] + s * this.radius/2, 6, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fillStyle = 'white';\r\n    ctx.fill();\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n    ctx.moveTo(this.pos['x'] + 2*this.radius/3, this.pos['y'] + s * this.radius/3);\r\n    ctx.beginPath();\r\n    ctx.fillStyle = \"black\";\r\n    ctx.arc(\r\n      3 * Math.cos(this.angletoPuck()) + (this.pos['x'] + 2*this.radius/3),\r\n      3 * Math.sin(this.angletoPuck()) + (this.pos['y'] + s * this.radius/2),\r\n      3, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fill();\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  }\r\n\r\n  drawRightEye(ctx, s){\r\n    ctx.moveTo(this.pos['x'] - 2*this.radius/3, this.pos['y'] + s * this.radius/2);\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.pos['x'] - 2*this.radius/3, this.pos['y'] + s * this.radius/2, 6, 0, 2 * Math.PI, true\r\n    );\r\n\r\n    ctx.fillStyle = 'white';\r\n    ctx.fill();\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n    ctx.moveTo(this.pos['x'] - 2*this.radius/3, this.pos['y'] + s * this.radius/2);\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      3 * Math.cos(this.angletoPuck()) + (this.pos['x'] - 2*this.radius/3),\r\n      3 * Math.sin(this.angletoPuck()) + (this.pos['y'] + s * this.radius/2),\r\n      3, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fillStyle = \"black\";\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  }\r\n\r\n  angletoPuck(){\r\n    const xdiff = this.puck.pos['x'] - this.pos['x'];\r\n    const ydiff = this.puck.pos['y'] - this.pos['y'];\r\n    const angle = Math.atan2(ydiff, xdiff);\r\n    return angle;\r\n  }\r\n\r\n  drawScore(ctx) {\r\n    ctx.font = \"bold 16px Helvetica, Arial, sans-serif\";\r\n    ctx.textBaseline = \"bottom\";\r\n    ctx.fillStyle = this.color;\r\n    ctx.fillText(\"Score: \" + this.points, this.startPos, this.field.minimumSize - 1);\r\n    ctx.fill();\r\n  };\r\n\r\n\r\n  keybind(player) {\r\n    if (player === \"player1\"){\r\n      document.addEventListener(\"keydown\", this.keyDownHandler1.bind(this));\r\n      document.addEventListener(\"keyup\", this.keyUpHandler1.bind(this));\r\n    } else if (player === \"player2\") {\r\n      document.addEventListener(\"keydown\", this.keyDownHandler2.bind(this));\r\n      document.addEventListener(\"keyup\", this.keyUpHandler2.bind(this));\r\n    }\r\n  }\r\n\r\n  keyDownHandler1(event){\r\n    if (this.game.stopGame) {\r\n      return;\r\n    } else if (event.keyCode === 65) { // A\r\n        this.vel['x'] -= 5;\r\n    } else if (event.keyCode === 87) { // W\r\n        this.vel['y'] -= 5;\r\n    } else if (event.keyCode === 68) { // D\r\n        this.vel['x'] += 5;\r\n    } else if (event.keyCode === 83) { // S\r\n        this.vel['y'] += 5;\r\n    }\r\n  }\r\n  keyDownHandler2(event){\r\n    if (this.game.stopGame) {\r\n      return;\r\n    } else if (event.keyCode === 37) { // Left\r\n        this.vel['x'] -= 5;\r\n    } else if (event.keyCode === 38) { // Up\r\n        this.vel['y'] -= 5;\r\n    } else if (event.keyCode === 39) { // Right\r\n        this.vel['x'] += 5;\r\n    } else if (event.keyCode === 40) { // Down\r\n        this.vel['y'] += 5;\r\n    }\r\n  }\r\n\r\n  keyUpHandler1(event){\r\n    if (event.keyCode === 65 || event.keyCode === 68){\r\n      this.vel['x'] = 0;\r\n    } else if(event.keyCode === 87 || event.keyCode === 83){\r\n      this.vel['y'] = 0;\r\n    }\r\n  }\r\n  keyUpHandler2(event){\r\n    if(event.keyCode === 37 || event.keyCode === 39){\r\n      this.vel['x'] = 0;\r\n    } else if(event.keyCode === 38 || event.keyCode === 40){\r\n      this.vel['y'] = 0;\r\n    }\r\n  }\r\n\r\n  velocityLimit(){\r\n     if (this.vel['x'] > 5) {\r\n       this.vel['x'] = 5;\r\n     }\r\n     else if (this.vel['x'] < -5) {\r\n       this.vel['x'] = -5;\r\n     }\r\n     if (this.vel['y'] > 5) {\r\n       this.vel['y'] = 5;\r\n     }\r\n     else if (this.vel['y'] < -5) {\r\n       this.vel['y'] = -5;\r\n     }\r\n   }\r\n\r\n}\r\nexport default Slime;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/slime.js\n// module id = 0\n// module chunks = 0","import Util from './util';\r\n\r\n\r\nclass MovingObject {\r\n  constructor(options){\r\n    this.pos = options.pos;\r\n    this.vel = options.vel || {'x': 0, 'y': 0};\r\n    this.radius = options.radius || 25;\r\n    this.color = options.color || this.randomColor();\r\n    this.game = options.game;\r\n    this.field = options.field;\r\n    this.collided = 0;\r\n    this.mass = Math.pow(this.radius, 3);\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.strokeStyle = 'black';\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.pos['x'], this.pos['y'], this.radius, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.lineWidth = 1;\r\n    ctx.stroke();\r\n    ctx.fill();\r\n  }\r\n\r\n  randomColor() {\r\n    const colorArray = ['#E6194B', '#3CB44B', '#FFE119', '#0082C8', '#F58231',\r\n  '#911EB4', '#46F0F0', '#F032E6', '#008080', '#AA6E28', '#800000',\r\n  '#808000', \"#000080\", \"#808080\"]\r\n\r\n    return colorArray[Math.floor(Math.random() * colorArray.length)];\r\n  }\r\n\r\n  checkWallCollisions() {\r\n    if(this.pos['x'] - this.radius - this.field.minimumSize + this.vel['x'] < 0 ||\r\n      this.pos['x'] + this.radius + this.vel['x'] > this.field.width + this.field.minimumSize){\r\n        this.vel['x'] *= -0.6;\r\n    }\r\n    if (this.pos['y'] - this.radius - this.field.minimumSize + this.vel['y'] < 0 ||\r\n      this.pos['y'] + this.radius + this.vel['y'] > this.field.height + this.field.minimumSize){\r\n        this.vel['y'] *= -0.6;\r\n    }\r\n    if (this.pos['y'] + this.radius > this.field.height + this.field.minimumSize) {\r\n      this.pos['y'] = this.field.height + this.field.minimumSize - this.radius;\r\n    }\r\n    if (this.pos['y'] - this.radius - this.field.minimumSize < 0) {\r\n      this.pos['y'] = this.radius + this.field.minimumSize;\r\n    }\r\n    if (this.pos['x'] + this.radius > this.field.width + this.field.minimumSize) {\r\n      this.pos['x'] = this.field.width + this.field.minimumSize - this.radius;\r\n    }\r\n    if (this.pos['x'] - this.radius - this.field.minimumSize < 0) {\r\n      this.pos['x'] = this.radius + this.field.minimumSize;\r\n    }\r\n  }\r\n\r\n  collideWith(otherObj){\r\n    if (otherObj.speed() < 0.1){\r\n      this.staticCollision(otherObj);\r\n    } else {\r\n      this.elasticCollision(otherObj);\r\n    }\r\n  }\r\n\r\n  staticCollision(otherObj){\r\n    const theta1 = this.angle();\r\n    const theta2 = otherObj.angle();\r\n    const m1 = this.mass;\r\n    const m2 = otherObj.mass;\r\n    const v1 = this.speed();\r\n    const v2 = otherObj.speed();\r\n    const vel1dif = v1 * Math.sqrt(m1*m1 + m2*m2 + 2*m1*m2* Math.cos(theta1))/ (m1 + m2);\r\n    const vel2dif = v1 * 2 * m1/(m1 + m2) * Math.sin(theta1/2);\r\n    this.vel['x'] = vel1dif * Math.cos(theta1);\r\n    this.vel['y'] = vel1dif * Math.sin(theta1);\r\n    otherObj.vel['x'] = vel2dif * Math.cos(theta2);\r\n    otherObj.vel['y'] = vel2dif * Math.sin(theta2);\r\n  }\r\n\r\n  elasticCollision(otherObj){\r\n    const phi = Math.atan2(otherObj.vel['y'] - this.vel['y'],\r\n    otherObj.vel['x'] - this.vel['x'] )\r\n    const theta1 = this.angle();\r\n    const theta2 = otherObj.angle();\r\n    const m1 = this.mass;\r\n    const m2 = otherObj.mass;\r\n    const v1 = this.speed();\r\n    const v2 = otherObj.speed();\r\n\r\n    const velx1dif = (v1 * Math.cos(theta1 - phi) * (m1-m2) + 2*m2*v2*Math.cos(theta2 - phi)) /\r\n    (m1+m2) * Math.cos(phi) + v1*Math.sin(theta1-phi) * Math.cos(phi+Math.PI/2);\r\n    const vely1dif = (v1 * Math.cos(theta1 - phi) * (m1-m2) + 2*m2*v2*Math.cos(theta2 - phi)) /\r\n    (m1+m2) * Math.sin(phi) + v1*Math.sin(theta1-phi) * Math.sin(phi+Math.PI/2);\r\n    const velx2dif = (v2 * Math.cos(theta2 - phi) * (m2-m1) + 2*m1*v1*Math.cos(theta1 - phi)) /\r\n    (m1+m2) * Math.cos(phi) + v2*Math.sin(theta2-phi) * Math.cos(phi+Math.PI/2);\r\n    const vely2dif = (v2 * Math.cos(theta2 - phi) * (m2-m1) + 2*m1*v1*Math.cos(theta1 - phi)) /\r\n    (m1+m2) * Math.sin(phi) + v2*Math.sin(theta2-phi) * Math.sin(phi+Math.PI/2);\r\n\r\n    this.vel['x'] = velx1dif;\r\n    this.vel['y'] = vely1dif;\r\n    otherObj.vel['x'] = velx2dif;\r\n    otherObj.vel['y'] = vely2dif;\r\n  }\r\n\r\n  isCollidedWith(otherObject) {\r\n    const centerDist = Util.dist(this.pos, otherObject.pos);\r\n\r\n    if (centerDist <= (this.radius + otherObject.radius) && this.collided < 60) {\r\n      otherObject.pos['x'] = otherObject.pos['x'] + Math.cos(this.angletoOtherObject(otherObject)) * ((this.radius + otherObject.radius) - centerDist);\r\n      otherObject.pos['y'] = otherObject.pos['y'] + Math.sin(this.angletoOtherObject(otherObject)) * ((this.radius + otherObject.radius) - centerDist);\r\n      this.collided += 1;\r\n      return true;\r\n    } else {\r\n      this.collided = 0;\r\n      return false;\r\n    }\r\n  }\r\n\r\n  angletoOtherObject(otherObject){\r\n    const xdiff = otherObject.pos['x'] - this.pos['x'];\r\n    const ydiff = otherObject.pos['y'] - this.pos['y'];\r\n    const angle = Math.atan2(ydiff, xdiff);\r\n    return angle;\r\n  }\r\n\r\n\r\n  speed() {\r\n    return Math.sqrt(this.vel['x'] * this.vel['x'] + this.vel['y'] * this.vel['y']);\r\n  }\r\n\r\n  angle() {\r\n    return Math.atan2(this.vel['x'], this.vel['y']);\r\n  }\r\n\r\n  move(timeDelta){\r\n    const NORMAL_FRAME_TIME_DELTA = 1000/this.game.frames;\r\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\r\n      offsetX = this.vel['x'] * velocityScale,\r\n      offsetY = this.vel['y'] * velocityScale;\r\n    this.pos = {'x': this.pos['x'] + offsetX, 'y': this.pos['y'] + offsetY};\r\n  }\r\n\r\n  relocate(){\r\n    this.vel = {'x': 0, 'y': 0};\r\n  }\r\n\r\n}\r\n\r\nexport default MovingObject;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_object.js\n// module id = 1\n// module chunks = 0","class GameView {\r\n  constructor(game, ctx){\r\n    this.ctx = ctx;\r\n    this.game = game;\r\n    this.game.addGoals();\r\n    this.puck = this.game.addPuck();\r\n  }\r\n\r\n  menu() {\r\n    this.game.draw();\r\n    const result = document.getElementById('result-screen');\r\n    while (result.firstChild) {\r\n      result.removeChild(result.firstChild);\r\n    }\r\n    result.style.display = \"flex\";\r\n    const img = document.createElement('IMG');\r\n    img.src = \"images/LogoMakr_Title.png\";\r\n    img.alt = \"Welcome to Slime Air Hockey\";\r\n    img.width = 200;\r\n    const pvp = document.createElement(\"button\");\r\n    const pvpText = document.createTextNode(\"Player versus Player\");\r\n    pvp.appendChild(pvpText);\r\n    const pvc = document.createElement(\"button\");\r\n    const pvcText = document.createTextNode(\"Player versus Computer\");\r\n    pvc.appendChild(pvcText);\r\n    const cvc = document.createElement(\"button\");\r\n    const cvcText = document.createTextNode(\"Computer versus Computer\");\r\n    const options = document.createElement(\"button\");\r\n    const optionText = document.createTextNode(\"options\");\r\n    options.appendChild(optionText);\r\n    cvc.appendChild(cvcText);\r\n    result.appendChild(img);\r\n    result.appendChild(pvp);\r\n    result.appendChild(pvc);\r\n    result.appendChild(cvc);\r\n    result.appendChild(options);\r\n    pvp.addEventListener('click', () => {\r\n      result.style.display = \"none\";\r\n      this.start(\"pvp\");\r\n    });\r\n    pvc.addEventListener('click', () => {\r\n      this.versusComputerScreen();\r\n    });\r\n    cvc.addEventListener('click', () => {\r\n      result.style.display = \"none\";\r\n      this.start(\"cvc\");\r\n    });\r\n    training.addEventListener('click', () => {\r\n      result.style.display = \"none\";\r\n      this.start(\"training\");\r\n    })\r\n    options.addEventListener('click', () => {\r\n      this.optionScreen();\r\n    });\r\n  }\r\n\r\n  optionScreen() {\r\n    const option = document.getElementById('result-screen');\r\n    while (option.firstChild) {\r\n      option.removeChild(option.firstChild);\r\n    }\r\n    const timerHText = document.createElement('H3');\r\n    const timerText = document.createTextNode('Game Length');\r\n    timerHText.appendChild(timerText);\r\n    option.appendChild(timerHText);\r\n    const spanTimer = document.createElement('SPAN');\r\n    spanTimer.classList.add(\"spanTimer\");\r\n    const timer100 = document.createElement('button');\r\n    const timer100text = document.createTextNode('1 MIN');\r\n    timer100.appendChild(timer100text);\r\n    spanTimer.appendChild(timer100);\r\n    const timer200 = document.createElement('button');\r\n    const timer200text = document.createTextNode('2 MIN');\r\n    if (this.game.startTime === 60){\r\n      timer100.classList.add(\"pressed\");\r\n    } else {\r\n      timer200.classList.add(\"pressed\");\r\n    }\r\n    timer200.appendChild(timer200text);\r\n    spanTimer.appendChild(timer200);\r\n    const back = document.createElement(\"button\");\r\n    back.id = \"option-back\";\r\n    const backText = document.createTextNode(\"back\");\r\n    back.append(backText);\r\n    timer100.addEventListener('click', () => {\r\n      timer200.classList.remove(\"pressed\");\r\n      this.game.startTime = 60;\r\n      this.game.time = 60;\r\n      timer100.classList.add(\"pressed\");\r\n    });\r\n    timer200.addEventListener('click', () => {\r\n      timer100.classList.remove(\"pressed\");\r\n      this.game.startTime = 120;\r\n      this.game.time = 120;\r\n      timer200.classList.add(\"pressed\");\r\n    })\r\n    back.addEventListener('click', () => {\r\n      this.menu();\r\n    });\r\n    option.appendChild(spanTimer);\r\n    option.appendChild(back);\r\n  }\r\n\r\n\r\n  versusComputerScreen(){\r\n    const result = document.getElementById('result-screen');\r\n    while (result.firstChild) {\r\n      result.removeChild(result.firstChild);\r\n    }\r\n    const img = document.createElement('IMG');\r\n    img.src = \"images/LogoMakr_Title.png\";\r\n    img.alt = \"Welcome to Slime Air Hockey\";\r\n    img.width = 200;\r\n    const pvcRNG = document.createElement(\"button\");\r\n    const pvcRNGText = document.createTextNode(\"Random Slime\");\r\n    const pvcML = document.createElement(\"button\");\r\n    const pvcMLText = document.createTextNode(\"Learning Slime\");\r\n    const pvcR = document.createElement(\"button\");\r\n    const pvcRText = document.createTextNode(\"Drunk Slime\");\r\n    const pvcA = document.createElement(\"button\");\r\n    const pvcAText = document.createTextNode(\"Angry Slime\");\r\n    const pvcD = document.createElement(\"button\");\r\n    const pvcDText = document.createTextNode(\"Defensive Slime\");\r\n    const pvcB = document.createElement(\"button\");\r\n    const pvcBText = document.createTextNode(\"Bossy Slime\");\r\n    const back = document.createElement(\"button\");\r\n    const backText = document.createTextNode(\"back\");\r\n    pvcRNG.appendChild(pvcRNGText);\r\n    pvcML.appendChild(pvcMLText);\r\n    pvcR.appendChild(pvcRText);\r\n    pvcA.appendChild(pvcAText);\r\n    pvcD.appendChild(pvcDText);\r\n    pvcB.appendChild(pvcBText);\r\n    back.appendChild(backText);\r\n    result.appendChild(img);\r\n    result.appendChild(pvcRNG);\r\n    result.appendChild(pvcML);\r\n    result.appendChild(pvcR);\r\n    result.appendChild(pvcA);\r\n    result.appendChild(pvcD);\r\n    result.appendChild(pvcB);\r\n    result.appendChild(back);\r\n    pvcRNG.addEventListener('click', () => {\r\n    result.style.display = \"none\";\r\n    this.start(\"pvcRNG\");\r\n    });\r\n    pvcML.addEventListener('click', () => {\r\n    result.style.display = \"none\";\r\n    this.start(\"pvcML\");\r\n    });\r\n    pvcR.addEventListener('click', () => {\r\n      result.style.display = \"none\";\r\n      this.start(\"pvcR\");\r\n    });\r\n    pvcA.addEventListener('click', () => {\r\n      result.style.display = \"none\";\r\n      this.start(\"pvcA\");\r\n    });\r\n    pvcD.addEventListener('click', () => {\r\n      result.style.display = \"none\";\r\n      this.start(\"pvcD\");\r\n    });\r\n    pvcB.addEventListener('click', () => {\r\n      result.style.display = \"none\";\r\n      this.start(\"pvcB\");\r\n    });\r\n    back.addEventListener('click', () => {\r\n      this.menu();\r\n    });\r\n  }\r\n\r\n\r\n  start(type) {\r\n    if(type === \"pvp\"){\r\n      this.pvpSlimes();\r\n    } else if(type === \"pvcRNG\") {\r\n      this.pvcRNGSlime();\r\n    } else if (type ===\"pvcML\") {\r\n      this.pvcMLSlime();\r\n    } else if(type === \"pvcR\") {\r\n      this.pvcRAISlime();\r\n    } else if (type === \"pvcA\") {\r\n      this.pvcAAISlime();\r\n    } else if (type === \"pvcD\") {\r\n      this.pvcDAISlime();\r\n    } else if (type === \"pvcB\") {\r\n      this.pvcBAISlime();\r\n    } else if(type === \"cvc\"){\r\n      this.cvcSlimes();\r\n    }\r\n    this.lastTime = 0;\r\n    this.game.handleTimer();\r\n    this.game.handlePause();\r\n    requestAnimationFrame(this.animate.bind(this));\r\n  }\r\n\r\n  trainingSlime() {\r\n    this.slime1 = this.game.addDAISlime(1);\r\n    this.slime2 = this.game.addMLSlime(3);\r\n    this.game.time = 4000;\r\n  }\r\n\r\n  pvpSlimes(){\r\n    this.slime1 = this.game.addSlime(1);\r\n    this.slime2 = this.game.addSlime(3);\r\n    this.slime1.keybind(\"player1\");\r\n    this.slime2.keybind(\"player2\");\r\n  }\r\n\r\n  pvcRNGSlime() {\r\n    this.slime1 = this.game.addSlime(1);\r\n    this.slime2 = this.game.addRNGSlime(3);\r\n    this.slime1.keybind(\"player1\");\r\n  }\r\n\r\n  pvcMLSlime() {\r\n    this.slime1 = this.game.addSlime(1);\r\n    this.slime2 = this.game.addMLSlime(3);\r\n    this.slime1.keybind(\"player1\");\r\n  }\r\n\r\n  pvcRAISlime(){\r\n    this.slime1 = this.game.addSlime(1);\r\n    this.slime2 = this.game.addRAISlime(3);\r\n    this.slime1.keybind(\"player1\");\r\n  }\r\n\r\n  pvcAAISlime(){\r\n    this.slime1 = this.game.addSlime(1);\r\n    this.slime2 = this.game.addAAISlime(3);\r\n    this.slime1.keybind(\"player1\");\r\n  }\r\n\r\n  pvcDAISlime() {\r\n    this.slime1 = this.game.addSlime(1);\r\n    this.slime2 = this.game.addDAISlime(3);\r\n    this.slime1.keybind(\"player1\");\r\n  }\r\n\r\n  pvcBAISlime() {\r\n    this.slime1 = this.game.addSlime(1);\r\n    this.slime2 = this.game.addBAISlime(3);\r\n    this.slime1.keybind(\"player1\");\r\n  }\r\n\r\n  cvcSlimes() {\r\n    this.slime1 = this.game.addRNGSlime(1);\r\n    this.slime2 - this.game.addRNGSlime(3);\r\n  }\r\n\r\n  animate(time) {\r\n    const timeDelta = time - this.lastTime;\r\n    if (!this.game.stopDraw) {\r\n      this.game.step(timeDelta);\r\n      this.game.draw();\r\n    }\r\n    this.lastTime = time;\r\n    if (!this.game.stopGame){\r\n      requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n  }\r\n}\r\n\r\nexport default GameView;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 2\n// module chunks = 0","import Game from './game';\r\nimport GameView from './game_view';\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const canvasEl = document.getElementById(\"game-canvas\");\r\n  canvasEl.width = Game.DIM_X;\r\n  canvasEl.height = Game.DIM_Y;\r\n\r\n  let ctx = canvasEl.getContext('2d');\r\n  const game = new Game(ctx);\r\n  new GameView(game, ctx).menu();\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/slime_air_hockey.js\n// module id = 3\n// module chunks = 0","import Slime from './slime';\r\nimport RAISlime from \"./RAIslime\";\r\nimport MLSlime from \"./MLslime\";\r\nimport AAISlime from \"./AAIslime\";\r\nimport DAISlime from \"./DAIslime\";\r\nimport BAISlime from \"./BAIslime\";\r\nimport Puck from './puck';\r\nimport Goal from './goals';\r\nimport GameView from './game_view';\r\n\r\nconst FIELD ={\r\n  minimumSize: 20,\r\n  height: 360,\r\n  width: 760,\r\n}\r\n\r\nclass Game {\r\n  constructor(ctx){\r\n    this.ctx = ctx\r\n    this.slimes = [];\r\n    this.puck = [];\r\n    this.goals = [];\r\n    this.goalFlag = true;\r\n    this.stopDraw = false;\r\n    this.stopGame = false;\r\n    this.field = FIELD;\r\n    this.startTime = 60;\r\n    this.time = 60;\r\n    this.frames = 60;\r\n    this.handlePauseScreen = this.handlePauseScreen.bind(this);\r\n    this.removePause = this.removePause.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n  }\r\n\r\n  add(object){\r\n    if (object instanceof Slime){\r\n      this.slimes.push(object);\r\n    } else if (object instanceof Puck) {\r\n      this.puck.push(object);\r\n    } else {\r\n      throw new Error(\"unknown type of object\");\r\n    }\r\n  }\r\n\r\n  addPuck() {\r\n    const puck = new Puck({\r\n      pos: {'x': Game.DIM_X /2, 'y': Game.DIM_Y /2},\r\n      radius: 10,\r\n      game: this,\r\n      field: this.field,\r\n    });\r\n    this.add(puck);\r\n    return puck;\r\n  }\r\n\r\n  addSlime(s) {\r\n    const slime = new Slime({\r\n      startPos: Game.DIM_X * s/4,\r\n      pos: {'x': Game.DIM_X * s/4, 'y': Game.DIM_Y / 2},\r\n      game: this,\r\n      field: this.field,\r\n      side: s,\r\n      puck: this.puck[0]\r\n    });\r\n    this.add(slime);\r\n    return slime;\r\n  }\r\n\r\n  addMLSlime(s) {\r\n    const slime = new MLSlime({\r\n      startPos: Game.DIM_X * s/4,\r\n      pos: {'x': Game.DIM_X * s/4, 'y': Game.DIM_Y / 2},\r\n      game: this,\r\n      field: this.field,\r\n      side: s,\r\n      puck: this.puck[0],\r\n    });\r\n    this.add(slime);\r\n    return slime;\r\n  }\r\n\r\n  addRAISlime(s) {\r\n    const slime = new RAISlime({\r\n      startPos: Game.DIM_X * s/4,\r\n      pos: {'x': Game.DIM_X * s/4, 'y': Game.DIM_Y / 2},\r\n      game: this,\r\n      field: this.field,\r\n      side: s,\r\n      puck: this.puck[0]\r\n    });\r\n    this.add(slime);\r\n    return slime;\r\n  }\r\n\r\n  addAAISlime(s) {\r\n    const slime = new AAISlime({\r\n      startPos: Game.DIM_X * s/4,\r\n      pos: {'x': Game.DIM_X * s/4, 'y': Game.DIM_Y / 2},\r\n      game: this,\r\n      field: this.field,\r\n      side: s,\r\n      puck: this.puck[0]\r\n    });\r\n    this.add(slime);\r\n    return slime;\r\n  }\r\n\r\n  addDAISlime(s) {\r\n    const slime = new DAISlime({\r\n      startPos: Game.DIM_X * s/4,\r\n      pos: {'x': Game.DIM_X * s/4, 'y': Game.DIM_Y / 2},\r\n      game: this,\r\n      field: this.field,\r\n      side: s,\r\n      puck: this.puck[0],\r\n    });\r\n    this.add(slime);\r\n    return slime;\r\n  }\r\n\r\n  addBAISlime(s) {\r\n    const slime = new BAISlime({\r\n      startPos: Game.DIM_X * s/4,\r\n      pos: {'x': Game.DIM_X * s/4, 'y': Game.DIM_Y / 2},\r\n      game: this,\r\n      field: this.field,\r\n      side: s,\r\n      puck: this.puck[0],\r\n    });\r\n    this.add(slime);\r\n    return slime;\r\n  }\r\n\r\n  addRNGSlime(s) {\r\n    const choice = Math.floor(Math.random() * 4);\r\n    if (choice === 0){\r\n      this.addRAISlime(s);\r\n    } else if (choice === 1) {\r\n      this.addAAISlime(s);\r\n    } else if(choice === 2){\r\n      this.addDAISlime(s);\r\n    } else if (choice === 3){\r\n      this.addBAISlime(s);\r\n    }\r\n  }\r\n\r\n  addTrainSlime(s){\r\n    const choice = Math.floor(Math.random() * 2);\r\n    if (choice === 0){\r\n      this.addDAISlime(s);\r\n    } else if (choice === 1){\r\n      this.addBAISlime(s);\r\n    }\r\n  }\r\n\r\n  resetSlimes(dir) {\r\n    this.allObjects().forEach((obj) => {\r\n      obj.relocate();\r\n    })\r\n    this.slimes[0].pos = {\r\n      'x': Game.DIM_X /6, 'y': Game.DIM_Y / 2\r\n    }\r\n    this.slimes[1].pos = {\r\n      'x': Game.DIM_X * 5/6, 'y': Game.DIM_Y / 2\r\n    }\r\n    if(dir === 'left'){\r\n      this.puck[0].pos = {\r\n        'x': Game.DIM_X/4,\r\n        'y': Math.random() * 2*this.field.height/3 + this.field.minimumSize + this.field.height/6\r\n      }\r\n    } else {\r\n      this.puck[0].pos = {\r\n        'x': Game.DIM_X * 3/4,\r\n        'y': Math.random() * 2*this.field.height/3 + this.field.minimumSize + this.field.height/6\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  addGoals() {\r\n    const goal1 = new Goal({\r\n      posX: this.field.minimumSize,\r\n      field: this.field\r\n    });\r\n    this.goals.push(goal1);\r\n    const goal2 = new Goal({\r\n      posX: this.field.width,\r\n      field: this.field\r\n    });\r\n    this.goals.push(goal2);\r\n  }\r\n\r\n\r\n  allObjects() {\r\n    return [].concat(this.slimes, this.puck);\r\n  }\r\n\r\n  checkCollisions() {\r\n    const allObjects = this.allObjects();\r\n    for (let i = 0; i < allObjects.length; i++) {\r\n      for (let j = 0; j < allObjects.length; j++) {\r\n        const obj1 = allObjects[i];\r\n        const obj2 = allObjects[j];\r\n        if (obj1 !== obj2 && obj1.isCollidedWith(obj2)) {\r\n          const collision = obj1.collideWith(obj2);\r\n          if (collision) return;\r\n        }\r\n        obj1.checkWallCollisions();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkVelocity() {\r\n    const allObjects = this.allObjects();\r\n    for (let i = 0; i < allObjects.length; i++){\r\n      const obj = allObjects[i];\r\n      obj.velocityLimit();\r\n    }\r\n  }\r\n\r\n  checkGoal() {\r\n    const puck = this.puck[0]\r\n    if (puck.pos['y'] <= this.goals[0].pos['y'] + this.goals[0].height &&\r\n        puck.pos['y'] >= this.goals[0].pos['y'] - 1){\r\n          if (puck.pos['x'] <= this.field.minimumSize + this.goals[0].width){\r\n            this.goalFlag = false;\r\n            this.handleGoal('left');\r\n          } else if (puck.pos['x'] >= this.field.width) {\r\n            this.goalFlag = false;\r\n            this.handleGoal('right');\r\n          }\r\n    }\r\n  }\r\n\r\n  handleGoal(dir){\r\n    if(!this.stopGame){\r\n      const goalWindow = document.getElementById('goal-screen');\r\n      goalWindow.style.display = \"flex\";\r\n      setTimeout(() => {\r\n        goalWindow.style.display = \"none\";\r\n        this.goalFlag = true;\r\n        if(dir === \"left\") {\r\n          this.resetSlimes('left');\r\n          this.slimes[1].points += 1;\r\n        } else {\r\n          this.resetSlimes('right');\r\n          this.slimes[0].points += 1;\r\n        }\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  handleTimer(){\r\n    this.timer = setInterval(() => {\r\n      this.time -= 1;\r\n      if (this.time <= 0){\r\n        this.goalFlag = false;\r\n        this.resetTimer();\r\n        this.winner();\r\n        this.displayEndScreen();\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  handlePause() {\r\n    document.addEventListener('keypress',this.handlePauseScreen);\r\n  }\r\n\r\n  removePause(){\r\n    document.removeEventListener('keypress', this.handlePauseScreen)\r\n  }\r\n\r\n  handlePauseScreen(e) {\r\n    if (!this.goalFlag) {\r\n      return;\r\n    }\r\n    if (e.keyCode === 32 && !this.stopDraw && !this.stopGame) { //space bar\r\n      clearInterval(this.timer);\r\n      this.stopDraw = true;\r\n      const pause = document.getElementById(\"result-screen\");\r\n      while (pause.firstChild) {\r\n        pause.removeChild(pause.firstChild);\r\n      }\r\n      pause.style.display = \"flex\";\r\n      const pauseHead = document.createElement(\"H3\");\r\n      const pauseText = document.createTextNode(\"Game Paused\");\r\n      pauseHead.appendChild(pauseText);\r\n      pause.appendChild(pauseHead);\r\n      const continueButton = document.createElement(\"BUTTON\");\r\n      continueButton.id = \"pause-screen\";\r\n      const continueText = document.createTextNode(\"Continue Game\");\r\n      continueButton.appendChild(continueText);\r\n      pause.appendChild(continueButton);\r\n      const goToMenu = document.createElement(\"BUTTON\");\r\n      goToMenu.id = \"pause-screen\";\r\n      const menuText = document.createTextNode(\"Go to Menu\");\r\n      goToMenu.appendChild(menuText);\r\n      pause.appendChild(goToMenu);\r\n      const continueH3 = document.createElement(\"H3\");\r\n      const continuePress = document.createTextNode(\"Press Space to Continue\")\r\n      continueH3.appendChild(continuePress);\r\n      pause.appendChild(continueH3);\r\n      continueButton.addEventListener(\"click\", (e) => {\r\n        this.handleTimer();\r\n        pause.style.display = \"none\";\r\n        this.stopDraw = false;\r\n      });\r\n      goToMenu.addEventListener(\"click\", (e) => {\r\n        this.resetGame();\r\n      });\r\n      }\r\n     else if (e.keyCode === 32 && this.stopDraw && !this.stopGame) {\r\n      this.handleTimer();\r\n      const pause = document.getElementById(\"result-screen\");\r\n      pause.style.display = \"none\";\r\n      this.stopDraw = false;\r\n    }\r\n  }\r\n\r\n  resetTimer() {\r\n    clearInterval(this.timer);\r\n    this.time = this.startTime;\r\n    this.goalFlag = false;\r\n    this.stopGame = true;\r\n  }\r\n\r\n  winner() {\r\n    if (this.slimes[0].points > this.slimes[1].points) {\r\n      this.winner = \"Player 1 has won\";\r\n    } else if (this.slimes[0].points < this.slimes[1].points){\r\n      this.winner = \"Player 2 has won\";\r\n    } else {\r\n      this.winner = \"Tied Game\";\r\n    }\r\n  }\r\n\r\n  displayEndScreen(){\r\n    const result = document.getElementById('result-screen');\r\n    while (result.firstChild) {\r\n      result.removeChild(result.firstChild);\r\n    }\r\n    result.style.display = \"flex\";\r\n    const head = document.createElement('H3')\r\n    const winner = document.createTextNode(this.winner);\r\n    head.appendChild(winner);\r\n    const toMenu = document.createElement(\"button\");\r\n    toMenu.id = \"end-screen\";\r\n    const toMenuButton = document.createTextNode(\"Go to Menu\");\r\n    toMenu.appendChild(toMenuButton);\r\n    const toMenuEnter = document.createElement('H3');\r\n    const toMenuText = document.createTextNode(\"Or Press Enter\");\r\n    toMenuEnter.appendChild(toMenuText);\r\n    result.appendChild(head);\r\n    result.appendChild(toMenu);\r\n    result.appendChild(toMenuEnter);\r\n    toMenu.addEventListener('click', () => {\r\n      this.resetGame();\r\n    })\r\n    document.addEventListener('keypress', this.handleKeyPress, true);\r\n  }\r\n\r\n\r\n  handleKeyPress(e) {\r\n    if (e.keyCode === 13 && this.stopGame) {\r\n      document.removeEventListener('keypress', this.handleKeyPress, true);\r\n      this.resetGame();\r\n    }\r\n  }\r\n\r\n  resetGame() {\r\n    this.removePause();\r\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    const game = new Game(this.ctx);\r\n    new GameView(game, this.ctx).menu();\r\n  }\r\n\r\n\r\n  displayTimer() {\r\n    const min = Math.floor(this.time / 60).toString();\r\n    let sec = (this.time % 60).toString();\r\n    sec = sec.length < 2 ? \"0\" + sec : sec;\r\n    this.ctx.font = \"bold 16px Arial\";\r\n    this.time > 10 ? this.ctx.fillStyle = \"blue\" : this.ctx.fillStyle = \"red\";\r\n    this.ctx.fillText(min + \":\" + sec, this.field.width/2, this.field.minimumSize - 1 );\r\n  }\r\n\r\n  draw(){\r\n    this.ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\r\n    this.ctx.fillStyle = \"#DDDDDD\";\r\n    this.ctx.fillRect(0,0, Game.DIM_X, Game.DIM_Y);\r\n    this.ctx.fill();\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = 'black';\r\n    this.ctx.lineWidth = 2;\r\n    this.ctx.strokeRect(this.field.minimumSize, this.field.minimumSize,\r\n      this.field.width, this.field.height);\r\n    this.ctx.stroke();\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = \"red\";\r\n    this.ctx.moveTo(Game.DIM_X/2, Game.DIM_Y / 2);\r\n    this.ctx.arc(\r\n      Game.DIM_X/2, Game.DIM_Y / 2, Game.DIM_Y/4, 1.5 * Math.PI, 3.5 * Math.PI, false\r\n    );\r\n    this.ctx.stroke();\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = \"black\";\r\n    this.ctx.lineWidth = 2;\r\n    this.ctx.moveTo(Game.DIM_X /2, this.field.minimumSize);\r\n    this.ctx.lineTo(Game.DIM_X /2, Game.DIM_Y - this.field.minimumSize);\r\n    this.ctx.stroke();\r\n    this.goals.map((goal) => {\r\n      goal.draw(this.ctx);\r\n    });\r\n    this.puck[0].draw(this.ctx);\r\n    this.slimes.map((slime) => {\r\n      slime.draw(this.ctx);\r\n      slime.drawScore(this.ctx);\r\n    });\r\n    this.displayTimer();\r\n  }\r\n\r\n  moveObjects(delta) {\r\n    this.allObjects().forEach((object) => {\r\n      object.move(delta);\r\n    });\r\n  }\r\n\r\n  remove(object) {\r\n    if (object instanceof Slime){\r\n      this.slimes.splice(this.slimes.indexOf(object), 1);\r\n    } else {\r\n      throw new Error('unknown type of object');\r\n    }\r\n  }\r\n\r\n  step(delta){\r\n    this.checkVelocity();\r\n    this.moveObjects(delta);\r\n    if (this.goalFlag){\r\n      this.checkGoal();\r\n    }\r\n    this.checkCollisions();\r\n  }\r\n}\r\n\r\nGame.DIM_X = 800;\r\nGame.DIM_Y = 400;\r\n\r\nexport default Game;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 4\n// module chunks = 0","const Util = {\r\n  dist(pos1, pos2) {\r\n    return Math.sqrt(\r\n      Math.pow(pos1['x'] - pos2['x'], 2) + Math.pow(pos1['y'] - pos2['y'], 2)\r\n    );\r\n  }\r\n}\r\n\r\nexport default Util;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 5\n// module chunks = 0","import Slime from './slime';\r\n\r\nclass RAISlime extends Slime {\r\n  constructor(options){\r\n    super(options);\r\n    this.antishake = 0;\r\n  }\r\n\r\n  move(timeDelta){\r\n    const NORMAL_FRAME_TIME_DELTA = 1000/this.game.frames;\r\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\r\n      offsetX = this.vel['x'] * velocityScale,\r\n      offsetY = this.vel['y'] * velocityScale;\r\n    this.pos = {'x': this.pos['x'] + offsetX, 'y': this.pos['y'] + offsetY};\r\n    if (this.antishake === 0){\r\n      this.checkMoves();\r\n    }\r\n    this.antishake += 1;\r\n    this.checkShake();\r\n  }\r\n\r\n  drawLeftEye(ctx){\r\n    ctx.moveTo(this.pos['x'] + 2*this.radius/3, this.pos['y'] - this.radius/3);\r\n    ctx.fillStyle = 'white';\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.pos['x'] + 2*this.radius/3, this.pos['y'] - this.radius/2, 6, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fill();\r\n    ctx.stroke();\r\n    ctx.fillStyle = 'black';\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      3 * this.vel['x']/5 + (this.pos['x'] + 2*this.radius/3),\r\n      3 * this.vel['y']/5 + (this.pos['y'] - this.radius/2),\r\n      3, 0, 2 * Math.PI, false\r\n    );\r\n    ctx.fill();\r\n  }\r\n\r\n  drawRightEye(ctx){\r\n    ctx.moveTo(this.pos['x'] - 2*this.radius/3, this.pos['y'] - this.radius/2);\r\n    ctx.fillStyle = 'white';\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.pos['x'] - 2*this.radius/3, this.pos['y'] - this.radius/2, 6, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fill();\r\n    ctx.stroke();\r\n    ctx.fillStyle = 'black';\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      3 * this.vel['x']/5 + (this.pos['x'] - 2*this.radius/3),\r\n      3 * this.vel['y']/5 + (this.pos['y'] - this.radius/2),\r\n      3, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fill();\r\n  }\r\n\r\n\r\n  checkShake() {\r\n    if(this.antishake > 25){\r\n      this.antishake = 0;\r\n    }\r\n  }\r\n\r\n  checkMoves() {\r\n    this.vel['x'] = (Math.random() * 10) - 5;\r\n    this.vel['y'] = (Math.random() * 10) - 5;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default RAISlime;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/RAIslime.js\n// module id = 6\n// module chunks = 0","import Slime from \"./slime\";\r\nimport trainedData from \"./trained_data\";\r\n\r\n\r\nclass MLSlime extends Slime {\r\n  constructor(options){\r\n    super(options)\r\n    this.otherSlimeStartPoints = 0;\r\n    this.startPoints = 0;\r\n    this.testMoves = new Array(9).fill(0);\r\n    this.trainedWeights = trainedData || new Array(9).fill(0)\r\n    if (window.localStorage.trainingData === undefined) {\r\n    window.localStorage.trainingData = JSON.stringify(trainedData);\r\n  } else {\r\n    window.localStorage.trainingData\r\n    }\r\n  }\r\n\r\n  move(timeDelta){\r\n    this.otherSlime = this.game.slimes.filter((slime) => slime.startPos !== this.startPos)[0];\r\n    const NORMAL_FRAME_TIME_DELTA = 1000/this.game.frames;\r\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\r\n      offsetX = this.vel['x'] * velocityScale,\r\n      offsetY = this.vel['y'] * velocityScale;\r\n    this.pos = {'x': this.pos['x'] + offsetX, 'y': this.pos['y'] + offsetY};\r\n    const checkOtherScore = this.otherSlime.points > this.otherSlimeStartPoints;\r\n    const checkOwnScore = this.points > this.startPoints;\r\n    if (checkOwnScore || checkOtherScore){\r\n      this.updateTrackMoves();\r\n      this.otherSlimeStartPoints = this.otherSlime.points;\r\n      this.startPoints = this.points;\r\n    }\r\n    this.handleTrackMoves();\r\n    this.getMoves();\r\n  }\r\n\r\n  handleTrackMoves() {\r\n    if (this.currentMove > -1) {\r\n      this.testMoves[this.currentMove] += 1\r\n    }\r\n  };\r\n\r\n  updateTrackMoves() {\r\n    let normalizedTrack = this.testMoves.map((track) => {\r\n      return (track - Math.min(...this.testMoves))/(Math.max(...this.testMoves) - Math.min(...this.testMoves));\r\n    });\r\n    if (this.otherSlimeStartPoints < this.otherSlime.points) {\r\n      normalizedTrack = normalizedTrack.map((test) => {\r\n        return test * -1\r\n      })\r\n    }\r\n    let updateWeights = JSON.parse(window.localStorage.trainingData);\r\n      for (let i=0; i < updateWeights.length; i++){\r\n        updateWeights[i] *= Math.pow(2, normalizedTrack[i]);\r\n        if (updateWeights[i] < 0) {\r\n          updateWeights[i] = 0;\r\n        } else if (updateWeights[i] > 1) {\r\n          updateWeights[i] = 1;\r\n        }\r\n      }\r\n    window.localStorage.trainingData = JSON.stringify(updateWeights);\r\n    this.testMoves = new Array(9).fill(0);\r\n  }\r\n\r\n  getMoves(){\r\n    const weights = JSON.parse(window.localStorage.trainingData);\r\n    let cumulativeWeights = [];\r\n    for (let i = 0; i < weights.length; i++){\r\n      let sum = weights[i];\r\n      for (let j = 0; j < i; j++){\r\n        sum += weights[j];\r\n      }\r\n      cumulativeWeights.push(sum);\r\n    };\r\n    const choice = Math.random() * Math.max(...cumulativeWeights);\r\n    let randomChoice = 0;\r\n    for (let i = 0; i < cumulativeWeights.length; i++){\r\n      if (choice < cumulativeWeights[i]){\r\n        randomChoice = i;\r\n        break\r\n       }\r\n     }\r\n    this.vel['x'] += MOVE_MAP[randomChoice][0];\r\n    this.vel['y'] += MOVE_MAP[randomChoice][1];\r\n    this.currentMove = randomChoice;\r\n  }\r\n\r\n}\r\n\r\n\r\nconst MOVE_MAP = [\r\n  [0, 0], // center\r\n  [1, 0], // right\r\n  [-1, 0], // left\r\n  [0, 1], // down\r\n  [0, -1], // up\r\n  [-1, -1], // up-left\r\n  [-1, 1], // down-left\r\n  [1, -1], // up-right\r\n  [1, 1] // down-right\r\n];\r\n\r\n\r\n\r\nexport default MLSlime;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/MLslime.js\n// module id = 7\n// module chunks = 0","const trainedData =\r\n  [0, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]\r\nexport default trainedData;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/trained_data.js\n// module id = 8\n// module chunks = 0","import Slime from './slime';\r\n\r\nclass AAISlime extends Slime {\r\n  constructor(options){\r\n    super(options);\r\n  }\r\n\r\n  move(timeDelta){\r\n    const NORMAL_FRAME_TIME_DELTA = 1000/this.game.frames;\r\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\r\n      offsetX = this.vel['x'] * velocityScale,\r\n      offsetY = this.vel['y'] * velocityScale;\r\n    this.pos = {'x': this.pos['x'] + offsetX, 'y': this.pos['y'] + offsetY};\r\n    this.checkMoves();\r\n  }\r\n\r\n  drawLeftEye(ctx){\r\n    ctx.moveTo(this.pos['x'] + 2*this.radius/3, this.pos['y'] - this.radius/3);\r\n    ctx.fillStyle = 'white';\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.pos['x'] + 2*this.radius/3, this.pos['y'] - this.radius/2, 6, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fill();\r\n    ctx.stroke();\r\n    ctx.fillStyle = 'black';\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      3 * Math.cos(this.angletoPuck()) + (this.pos['x'] + 2*this.radius/3),\r\n      3 * Math.sin(this.angletoPuck()) + (this.pos['y'] - this.radius/2),\r\n      3, 0, 2 * Math.PI, false\r\n    );\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.pos['x'] + this.radius/3, this.pos['y'] - this.radius );\r\n    ctx.strokeStyle =\"black\";\r\n    ctx.lineWidth = 3;\r\n    ctx.lineTo(this.pos['x'] + this.radius, this.pos['y'] - this.radius/3);\r\n    ctx.stroke();\r\n  }\r\n\r\n  drawRightEye(ctx) {\r\n    ctx.moveTo(this.pos['x'] - 2*this.radius/3, this.pos['y'] - this.radius/2);\r\n    ctx.fillStyle = 'white';\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.pos['x'] - 2*this.radius/3, this.pos['y'] - this.radius/2, 6, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fill();\r\n    ctx.stroke();\r\n    ctx.fillStyle = 'black';\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      3 * Math.cos(this.angletoPuck()) + (this.pos['x'] - 2*this.radius/3),\r\n      3 * Math.sin(this.angletoPuck()) + (this.pos['y'] - this.radius/2),\r\n      3, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.pos['x'] - this.radius/3, this.pos['y'] - this.radius );\r\n    ctx.strokeStyle =\"black\";\r\n    ctx.lineWidth = 3;\r\n    ctx.lineTo(this.pos['x'] - this.radius, this.pos['y'] - this.radius/3);\r\n    ctx.stroke();\r\n  }\r\n\r\n\r\n  checkMoves() {\r\n    const angle = this.angletoPuck();\r\n    this.vel['x'] += Math.cos(angle)/2;\r\n    this.vel['y'] += Math.sin(angle)/2;\r\n  }\r\n}\r\n\r\nexport default AAISlime;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/AAIslime.js\n// module id = 9\n// module chunks = 0","import Slime from \"./slime\";\r\n\r\n\r\nclass DAISlime extends Slime {\r\n  constructor(options){\r\n    super(options)\r\n  }\r\n\r\n  move(timeDelta){\r\n    const NORMAL_FRAME_TIME_DELTA = 1000/this.game.frames;\r\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\r\n      offsetX = this.vel['x'] * velocityScale,\r\n      offsetY = this.vel['y'] * velocityScale;\r\n    this.pos = {'x': this.pos['x'] + offsetX, 'y': this.pos['y'] + offsetY};\r\n    this.checkMoves();\r\n  }\r\n\r\n  checkMoves() {\r\n    const midpoint = this.field.width/2 + this.field.minimumSize;\r\n    if(this.game.puck[0].pos['x'] === midpoint){\r\n      this.side === 1 ? this.vel['x'] += 1 : this.vel['x'] -= 1;\r\n    }\r\n    this.otherSlime = this.game.slimes.filter((slime) => slime.startPos !== this.startPos)[0];\r\n    this.vel['y'] += Math.sin(this.angletoPuck())/3;\r\n    if(this.side === 1){\r\n      if (this.game.puck[0].pos['x'] > midpoint &&\r\n      this.otherSlime.pos['x'] < midpoint) {\r\n        this.vel['x'] += Math.cos(this.angletoPuck())/2;\r\n      } else if (this.otherSlime.pos['x'] < midpoint ||\r\n      this.pos['x'] > (midpoint - this.field.minimumSize)){\r\n        this.moveToGoal();\r\n      } else if (this.game.puck[0].pos['x'] < midpoint) {\r\n        this.vel['x'] += Math.cos(this.angletoPuck())/2;\r\n      }\r\n    } else if (this.side === 3){\r\n      if (this.game.puck[0].pos['x'] < midpoint &&\r\n     this.otherSlime.pos['x'] > midpoint) {\r\n       this.vel['x'] += Math.cos(this.angletoPuck())/2;\r\n     } else if (this.otherSlime.pos['x'] > midpoint ||\r\n      this.pos['x'] < (midpoint + this.field.minimumSize)) {\r\n        this.moveToGoal();\r\n      } else if (this.game.puck[0].pos['x'] > midpoint) {\r\n        this.vel['x'] += Math.cos(this.angletoPuck())/2;\r\n      }\r\n    }\r\n  }\r\n  moveToGoal(){\r\n    const goal = this.game.goals[0];\r\n    if(this.side === 1){\r\n      if(this.pos['x'] > (this.field.minimumSize + goal.width)){\r\n        this.vel['x'] -= 2;\r\n      }\r\n    } else if (this.side === 3) {\r\n      if (this.pos['x'] < (this.field.width - goal.width)) {\r\n        this.vel['x'] += 2;\r\n      }\r\n    }\r\n    if (this.pos['y'] > goal.height + goal.pos['y']) {\r\n      this.vel['y'] -= 1;\r\n    } else if (this.pos['y'] < goal.pos['y']) {\r\n      this.vel['y'] += 1;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default DAISlime;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/DAIslime.js\n// module id = 10\n// module chunks = 0","import Slime from \"./slime\";\r\n\r\nclass BAISlime extends Slime {\r\n  constructor(options){\r\n    super(options);\r\n  }\r\n\r\n  move(timeDelta){\r\n    const NORMAL_FRAME_TIME_DELTA = 1000/this.game.frames;\r\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\r\n      offsetX = this.vel['x'] * velocityScale,\r\n      offsetY = this.vel['y'] * velocityScale;\r\n    this.pos = {'x': this.pos['x'] + offsetX, 'y': this.pos['y'] + offsetY};\r\n    this.checkMoves();\r\n  }\r\n\r\n  drawLeftEye(ctx){\r\n    ctx.moveTo(this.pos['x'] + 2*this.radius/3, this.pos['y'] - this.radius/3);\r\n    ctx.fillStyle = 'red';\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.pos['x'] + 2*this.radius/3, this.pos['y'] - this.radius/2, 6, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fill();\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.pos['x'] + this.radius/3, this.pos['y'] - this.radius );\r\n    ctx.strokeStyle =\"black\";\r\n    ctx.lineWidth = 3;\r\n    ctx.lineTo(this.pos['x'] + this.radius, this.pos['y'] - this.radius/3);\r\n    ctx.stroke();\r\n  }\r\n\r\n  drawRightEye(ctx) {\r\n    ctx.moveTo(this.pos['x'] - 2*this.radius/3, this.pos['y'] - this.radius/2);\r\n    ctx.fillStyle = 'red';\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.pos['x'] - 2*this.radius/3, this.pos['y'] - this.radius/2, 6, 0, 2 * Math.PI, true\r\n    );\r\n    ctx.fill();\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.pos['x'] - this.radius/3, this.pos['y'] - this.radius );\r\n    ctx.strokeStyle =\"black\";\r\n    ctx.lineWidth = 3;\r\n    ctx.lineTo(this.pos['x'] - this.radius, this.pos['y'] - this.radius/3);\r\n    ctx.stroke();\r\n  }\r\n\r\n  checkMoves() {\r\n    const angle = this.angletoSlime();\r\n    this.vel['x'] += Math.cos(angle)/2;\r\n    this.vel['y'] += Math.sin(angle)/2;\r\n    if (this.isCollidedWith(this.otherSlime)){\r\n      this.otherSlime.vel['x'] *= 1.2;\r\n      this.otherSlime.vel['y'] *= 1.2;\r\n    }\r\n  }\r\n\r\n  angletoSlime() {\r\n    this.otherSlime = this.game.slimes.filter((slime) => slime.startPos !== this.startPos)[0];\r\n    const xdiff = this.otherSlime.pos['x'] - this.pos['x'];\r\n    const ydiff = this.otherSlime.pos['y'] - this.pos['y'];\r\n    const angle = Math.atan2(ydiff, xdiff);\r\n    return angle;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default BAISlime;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/BAIslime.js\n// module id = 11\n// module chunks = 0","import MovingObject from './moving_object';\r\n\r\nclass Puck extends MovingObject {\r\n  constructor(options){\r\n    super(options);\r\n  }\r\n  draw(ctx) {\r\n    if (this.speed() < 10) {\r\n      ctx.moveTo(this.pos['x'], this.pos['y']);\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        this.pos['x'], this.pos['y'], this.radius, 0, 2 * Math.PI, true\r\n      );\r\n      ctx.closePath();\r\n      ctx.fillStyle = this.color;\r\n      ctx.fill();\r\n      ctx.lineWidth = 1;\r\n      ctx.strokeStyle = 'black';\r\n      ctx.stroke();\r\n    } else {\r\n      const img = document.getElementById(\"fireball\");\r\n      ctx.drawImage(img, this.pos['x'] - this.radius, this.pos['y'] - this.radius, 30, 30);\r\n    }\r\n  }\r\n\r\n  velocityLimit(){\r\n     if (this.vel['x'] > 12) {\r\n       this.vel['x'] = 12;\r\n     }\r\n     else if (this.vel['x'] < -12) {\r\n       this.vel['x'] = -12;\r\n     }\r\n     if (this.vel['y'] > 12) {\r\n       this.vel['y'] = 12;\r\n     }\r\n     else if (this.vel['y'] < -12) {\r\n       this.vel['y'] = -12;\r\n     }\r\n   }\r\n}\r\n\r\nexport default Puck;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/puck.js\n// module id = 12\n// module chunks = 0","class Goal {\r\n  constructor(options){\r\n    this.field = options.field;\r\n    this.width = 20;\r\n    this.height = 100;\r\n    this.pos = {'x': options.posX, 'y': this.field.minimumSize + (this.field.height - this.height) / 2 }\r\n  }\r\n\r\n  draw(ctx){\r\n    ctx.strokeStyle = 'black';\r\n    ctx.strokeRect(this.pos['x'], this.pos['y'], this.width, this.height);\r\n  }\r\n\r\n}\r\n\r\nexport default Goal;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/goals.js\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}